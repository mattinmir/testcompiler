// Generated by Bisonc++ V4.05.00 on Sun, 08 Mar 2015 20:29:09 +0000

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"

#include <FlexLexer.h>/* ADD IN */

#undef Parser
class Parser: public ParserBase
{
        
    public:
        int parse();

    private:
	yyFlexLexer lexer; /* ADD IN */
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
        void exceptionHandler__(std::exception const &exc);
};

inline int Parser::lex() /* ADD IN */
{
    return lexer.yylex();
}

#endif
